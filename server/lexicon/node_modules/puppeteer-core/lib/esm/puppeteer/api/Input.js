import { TouchError } from '../common/Errors.js';
import { createIncrementalIdGenerator } from '../util/incremental-id-generator.js';
export class Keyboard {
    constructor() { }
}
export const MouseButton = Object.freeze({
    Left: 'left',
    Right: 'right',
    Middle: 'middle',
    Back: 'back',
    Forward: 'forward',
});
export class Mouse {
    constructor() { }
}
export class Touchscreen {
    idGenerator = createIncrementalIdGenerator();
    touches = [];
    constructor() { }
    removeHandle(handle) {
        const index = this.touches.indexOf(handle);
        if (index === -1) {
            return;
        }
        this.touches.splice(index, 1);
    }
    async tap(x, y) {
        const touch = await this.touchStart(x, y);
        await touch.end();
    }
    async touchMove(x, y) {
        const touch = this.touches[0];
        if (!touch) {
            throw new TouchError('Must start a new Touch first');
        }
        return await touch.move(x, y);
    }
    async touchEnd() {
        const touch = this.touches.shift();
        if (!touch) {
            throw new TouchError('Must start a new Touch first');
        }
        await touch.end();
    }
}
