export class PuppeteerError extends Error {
    constructor(message, options) {
        super(message, options);
        this.name = this.constructor.name;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
}
export class TimeoutError extends PuppeteerError {
}
export class TouchError extends PuppeteerError {
}
export class ProtocolError extends PuppeteerError {
    #code;
    #originalMessage = '';
    set code(code) {
        this.#code = code;
    }
    get code() {
        return this.#code;
    }
    set originalMessage(originalMessage) {
        this.#originalMessage = originalMessage;
    }
    get originalMessage() {
        return this.#originalMessage;
    }
}
export class UnsupportedOperation extends PuppeteerError {
}
export class TargetCloseError extends ProtocolError {
}
