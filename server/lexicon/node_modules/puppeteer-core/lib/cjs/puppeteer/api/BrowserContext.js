"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowserContext = void 0;
const rxjs_js_1 = require("../../third_party/rxjs/rxjs.js");
const EventEmitter_js_1 = require("../common/EventEmitter.js");
const util_js_1 = require("../common/util.js");
const disposable_js_1 = require("../util/disposable.js");
const Mutex_js_1 = require("../util/Mutex.js");
class BrowserContext extends EventEmitter_js_1.EventEmitter {
    constructor() {
        super();
    }
    #pageScreenshotMutex;
    #screenshotOperationsCount = 0;
    startScreenshot() {
        const mutex = this.#pageScreenshotMutex || new Mutex_js_1.Mutex();
        this.#pageScreenshotMutex = mutex;
        this.#screenshotOperationsCount++;
        return mutex.acquire(() => {
            this.#screenshotOperationsCount--;
            if (this.#screenshotOperationsCount === 0) {
                
                this.#pageScreenshotMutex = undefined;
            }
        });
    }
    waitForScreenshotOperations() {
        return this.#pageScreenshotMutex?.acquire();
    }
    async waitForTarget(predicate, options = {}) {
        const { timeout: ms = 30000 } = options;
    async deleteCookie(...cookies) {
        return await this.setCookie(...cookies.map(cookie => {
            return {
                ...cookie,
                expires: 1,
            };
        }));
    }
    get closed() {
        return !this.browser().browserContexts().includes(this);
    }
    get id() {
        return undefined;
    }
    [disposable_js_1.asyncDisposeSymbol]() {
        return this.close();
    }
}
exports.BrowserContext = BrowserContext;
