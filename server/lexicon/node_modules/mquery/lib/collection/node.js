'use strict';


const Collection = require('./collection');

class NodeCollection extends Collection {
  constructor(col) {
    super();

    this.collection = col;
    this.collectionName = col.collectionName;
  }

  async find(match, options) {
    const cursor = this.collection.find(match, options);

    return cursor.toArray();
  }

  async findOne(match, options) {
    return this.collection.findOne(match, options);
  }

  async count(match, options) {
    return this.collection.count(match, options);
  }

  async distinct(prop, match, options) {
    return this.collection.distinct(prop, match, options);
  }

  async updateMany(match, update, options) {
    return this.collection.updateMany(match, update, options);
  }

  async updateOne(match, update, options) {
    return this.collection.updateOne(match, update, options);
  }

  async replaceOne(match, update, options) {
    return this.collection.replaceOne(match, update, options);
  }

  async deleteOne(match, options) {
    return this.collection.deleteOne(match, options);
  }

  async deleteMany(match, options) {
    return this.collection.deleteMany(match, options);
  }

  async findOneAndDelete(match, options) {
    return this.collection.findOneAndDelete(match, options);
  }

  async findOneAndUpdate(match, update, options) {
    return this.collection.findOneAndUpdate(match, update, options);
  }

  findCursor(match, options) {
    return this.collection.find(match, options);
  }

}



module.exports = exports = NodeCollection;
