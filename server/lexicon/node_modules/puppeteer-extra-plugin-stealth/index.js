'use strict'

const { PuppeteerExtraPlugin } = require('puppeteer-extra-plugin')

class StealthPlugin extends PuppeteerExtraPlugin {
  constructor(opts = {}) {
    super(opts)
  }

  get name() {
    return 'stealth'
  }

  get defaults() {
    const availableEvasions = new Set([
      'chrome.app',
      'chrome.csi',
      'chrome.loadTimes',
      'chrome.runtime',
      'defaultArgs',
      'iframe.contentWindow',
      'media.codecs',
      'navigator.hardwareConcurrency',
      'navigator.languages',
      'navigator.permissions',
      'navigator.plugins',
      'navigator.webdriver',
      'sourceurl',
      'user-agent-override',
      'webgl.vendor',
      'window.outerdimensions'
    ])
    return {
      availableEvasions,
      
      enabledEvasions: new Set([...availableEvasions])
    }
  }

  get dependencies() {
    return new Set(
      [...this.opts.enabledEvasions].map(e => `${this.name}/evasions/${e}`)
    )
  }

  get availableEvasions() {
    return this.defaults.availableEvasions
  }

  get enabledEvasions() {
    return this.opts.enabledEvasions
  }

  set enabledEvasions(evasions) {
    this.opts.enabledEvasions = evasions
  }

  async onBrowser(browser) {
    if (browser && browser.setMaxListeners) {
      
      browser.setMaxListeners(30)
    }
  }
}

const defaultExport = opts => new StealthPlugin(opts)
module.exports = defaultExport




