"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DistinctOperation = void 0;
const utils_1 = require("../utils");
const command_1 = require("./command");
const operation_1 = require("./operation");
class DistinctOperation extends command_1.CommandOperation {
    constructor(collection, key, query, options) {
        super(collection, options);
        this.options = options ?? {};
        this.collection = collection;
        this.key = key;
        this.query = query;
    }
    get commandName() {
        return 'distinct';
    }
    async execute(server, session, timeoutContext) {
        const coll = this.collection;
        const key = this.key;
        const query = this.query;
        const options = this.options;
        
        const cmd = {
            distinct: coll.collectionName,
            key: key,
            query: query
        };
        
        if (typeof options.maxTimeMS === 'number') {
            cmd.maxTimeMS = options.maxTimeMS;
        }
        
        
        if (typeof options.comment !== 'undefined') {
            cmd.comment = options.comment;
        }
        
        (0, utils_1.decorateWithReadConcern)(cmd, coll, options);
        
        (0, utils_1.decorateWithCollation)(cmd, coll, options);
        const result = await super.executeCommand(server, session, cmd, timeoutContext);
        return this.explain ? result : result.values;
    }
}
exports.DistinctOperation = DistinctOperation;
(0, operation_1.defineAspects)(DistinctOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE]);
