"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDirectorySync = exports.isDirectory = exports.removeUndefinedValuesFromObject = exports.getPropertyByPath = exports.emplace = void 0;
const fs_1 = __importStar(require("fs"));
function emplace(map, key, fn) {
    const cached = map.get(key);
    if (cached !== undefined) {
        return cached;
    }
    const result = fn();
    map.set(key, result);
    return result;
}
exports.emplace = emplace;





function getPropertyByPath(source, path) {
    if (typeof path === 'string' &&
        Object.prototype.hasOwnProperty.call(source, path)) {
        return source[path];
    }
    const parsedPath = typeof path === 'string' ? path.split('.') : path;
    
    return parsedPath.reduce((previous, key) => {
        if (previous === undefined) {
            return previous;
        }
        return previous[key];
    }, source);
}
exports.getPropertyByPath = getPropertyByPath;
