

import z from 'zod';
export const PermissionsCommandSchema = z.lazy(() => Permissions.SetPermissionSchema);
export var Permissions;
(function (Permissions) {
    Permissions.PermissionDescriptorSchema = z.lazy(() => z.object({
        name: z.string(),
    }));
})(Permissions || (Permissions = {}));
(function (Permissions) {
    Permissions.PermissionStateSchema = z.lazy(() => z.enum(['granted', 'denied', 'prompt']));
})(Permissions || (Permissions = {}));
(function (Permissions) {
    Permissions.SetPermissionSchema = z.lazy(() => z.object({
        method: z.literal('permissions.setPermission'),
        params: Permissions.SetPermissionParametersSchema,
    }));
})(Permissions || (Permissions = {}));
(function (Permissions) {
    Permissions.SetPermissionParametersSchema = z.lazy(() => z.object({
        descriptor: Permissions.PermissionDescriptorSchema,
        state: Permissions.PermissionStateSchema,
        origin: z.string(),
        userContext: z.string().optional(),
    }));
})(Permissions || (Permissions = {}));
