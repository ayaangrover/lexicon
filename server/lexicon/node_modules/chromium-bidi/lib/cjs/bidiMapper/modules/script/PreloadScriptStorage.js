"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreloadScriptStorage = void 0;
const ErrorResponse_js_1 = require("../../../protocol/ErrorResponse.js");
class PreloadScriptStorage {
    find(filter) {
        if (!filter) {
            return [...this.#scripts];
        }
        return [...this.#scripts].filter((script) => {
            
            if (script.contexts === undefined && script.userContexts === undefined) {
                return true;
            }
            if (filter.targetId !== undefined &&
                script.targetIds.has(filter.targetId)) {
                return true;
            }
            return false;
        });
    }
    add(preloadScript) {
        this.#scripts.add(preloadScript);
    }
    getPreloadScript(id) {
        const script = [...this.#scripts].find((script) => script.id === id);
        if (script === undefined) {
            throw new ErrorResponse_js_1.NoSuchScriptException(`No preload script with id '${id}'`);
        }
        return script;
    }
    onCdpTargetCreated(targetId, userContext) {
        const scriptInUserContext = [...this.#scripts].filter((script) => {
            
            if (!script.userContexts && !script.contexts) {
                return true;
            }
            return script.userContexts?.includes(userContext);
        });
        for (const script of scriptInUserContext) {
            script.targetIds.add(targetId);
        }
    }
}
exports.PreloadScriptStorage = PreloadScriptStorage;
